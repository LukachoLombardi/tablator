# generated by datamodel-codegen:
#   filename:  <stdin>
#   timestamp: 2025-01-28T13:05:10+00:00

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field


class PassportModel(BaseModel):
    first_name: Optional[str] = Field(
        None,
        alias='first-name',
        description='First name of the person. Without special characters such as Ã©, Ã¤, -, / etc.',
        title='First Name',
    )
    middle_names: Optional[str] = Field(
        None,
        alias='middle-names',
        description='Potential middle name(s) of the person. Please do not use any special characters such as Ã©, Ã¤, -, / etc.',
        title='Middle Name(s)',
    )
    surname: Optional[str] = Field(
        None,
        description='Last name(s) of the person. Please do not use any special characters such as Ã©, Ã¤, -, / etc.',
        title='Surname(s)',
    )
    gender: Optional[str] = Field(
        None, description="sex of the person. Write 'Mr' or 'Mrs'.", title='Gender'
    )
    birth_date_adults_opt: Optional[str] = Field(
        None,
        alias='birth-date-adults-opt',
        description='Date of birth of the person, if they were born before 2007. In the format DD.MM.YYYY',
        title='Birth Date Adults',
    )
    birth_date_non_adults_opt: Optional[str] = Field(
        None,
        alias='birth-date-non-adults-opt',
        description='Date of birth of the person, if they were born after 2007. In the format DD.MM.YYYY',
        title='Birth Date non-Adults',
    )
    passport_number: Optional[str] = Field(
        None,
        alias='passport-number',
        description='Passport number of the person. This is the human readable version, and should not be longer than ~15 characters.',
        title='Passport Number',
    )
    remark_opt: None = Field(None, alias='remark-opt', title='Remark')
    remark_2_opt: None = Field(None, alias='remark-2-opt', title='Remark 2')
